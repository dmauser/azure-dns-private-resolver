# Parameters (make changes based on your requirements)
region1=southcentralus
region2=northcentralus
rg=lab-vwan-adr
vwanname=vwan-adr
hub1name=hub1
hub2name=hub2
username=azureuser
password="Msft123Msft123"
vmsize=Standard_DS1_v2

# Prompt color:
export PS1="\e[0;32m[\u@\h \W]\$ \e[0m"
# change bash prompt color to blue
export PS1="\e[0;34m[\u@\h \W]\$ \e[0m"
# change bash prompt color to yellow
export PS1="\e[0;33m[\u@\h \W]\$ \e[0m"

# list all azure bastions in the subscription
az network bastion list -g $rg --query "[].{name:name,location:location,resourceGroup:resourceGroup}" -o table

# Access VM using SSH using Azure Bastion
az network bastion ssh --resource-group $rg --name branch1-bastion --target-resource-id $(az vm show -g $rg -n branch1vm --query id -o tsv)  --auth-type password --username $username 
az network bastion ssh --resource-group $rg --name branch2-bastion --target-resource-id $(az vm show -g $rg -n branch2vm --query id -o tsv)  --auth-type password --username $username 





# dump storage accounts for resource group $rg
echo Listing Private Endpoint Names:
az storage account list  -g $rg --query [].primaryEndpoints.blob -o table

# Review Linux VM dns client settings
systemd-resolve --status | grep "DNS Servers"

# Resolver Storage Private Endpoints:
nslookup spk1stg15399.blob.core.windows.net | grep "Address: " && \
nslookup spk3stg15399.blob.core.windows.net | grep "Address: " && \
nslookup hub1svcstg15399.blob.core.windows.net | grep "Address: " && \
nslookup hub2svcstg15399.blob.core.windows.net | grep "Address: " 

# List all private endppoints in the resource group $rg
az network private-endpoint list -g $rg --query "[].{name:name,location:location,resourceGroup:resourceGroup}" -o table

# Failover storage account hub1svcstg15399 from South Central US to North Central US
# az storage account failover -g $rg -n hub1svcstg15399

# nslookup hub1svcstg15399.blob.core.windows.net bash loop
for i in {1..1000}; do echo -e "\e[0;33mLoop Count: $i\e[0m"; nslookup hub1svcstg15399.blob.core.windows.net | grep "Address: "; sleep 3; done

## Create Hub1 PE on Hub2
stgname=$(az storage account list -g $rg --query '[?contains(name,`'hub1'`)].{name:name}' -o tsv)
az network private-endpoint create -l $region2 \
    --connection-name $hub1name-bkp-connection \
    --name $hub1name-bkp-pe \
    --private-connection-resource-id $(az storage account show -g $rg -n $stgname --query id -o tsv) \
    --resource-group $rg \
    --subnet main \
    --group-id blob \
    --vnet-name $hub2name-svc \
    --output none

# $hub1name-bkp-pe 
az network private-endpoint dns-zone-group create \
    --resource-group $rg \
    --endpoint-name $hub1name-bkp-pe \
    --name privatelink_blob_core_windows_net \
    --private-dns-zone "privatelink.blob.core.windows.net" \
    --zone-name default \
    --output none

# Rollback Hub1 PE to Hub1
# delete private endpoint dns zone group for hub1-pe
az network private-endpoint dns-zone-group delete \
    --resource-group $rg \
    --endpoint-name hub1-pe \
    --name privatelink_blob_core_windows_net \
    --output none

# add private endpoint dns zone group for hub1-pe 
az network private-endpoint dns-zone-group create \
    --resource-group $rg \
    --endpoint-name hub1-pe \
    --name privatelink_blob_core_windows_net \
    --private-dns-zone "privatelink.blob.core.windows.net" \
    --zone-name default \
    --output none  

# Clean up Demo
# Remove Hub1-bkp-pe private endpoint
az network private-endpoint delete -g $rg -n $hub1name-bkp-pe --output none



