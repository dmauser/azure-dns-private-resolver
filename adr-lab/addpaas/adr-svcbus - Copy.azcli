# **** Validation *****
#Parameters
rg=lab-dns-resolver 
location=eastus
password=Msft123Msft123
dnsvmname=onprem-windns

# Create a service bus namespace
randomIdentifier1=$RANDOM 
az servicebus namespace create --name hubsvcbus$randomIdentifier1 --resource-group $rg --location $location --sku Premium --output none
az servicebus namespace create --name spk1svcbus$randomIdentifier1 --resource-group $rg --location $location --sku Premium --output none
az servicebus namespace create --name spk2svcbus$randomIdentifier1 --resource-group $rg --location $location --sku Premium --output none

# Create a service bus queue
# az servicebus queue create --name myqueue --namespace-name svcbus$randomIdentifier1 --resource-group $rg --output none

# Add Service Bus as private endpoint on the Hub VNET
svcbusname=$(az servicebus namespace list -g $rg --query '[?contains(name,`'hub'`)].{name:name}' -o tsv)
az network private-endpoint create \
    --resource-group $rg \
    --name hubsvcbuspe \
    --vnet-name az-hub-vnet \
    --subnet pesubnet \
    --private-connection-resource-id $(az servicebus namespace show --name $svcbusname --resource-group $rg --query id --output tsv) \
    --group-ids namespace \
    --connection-name hubsvcbuspeconn \
    --output none

# Add Service Bus as private endpoint on the Spoke1 VNET
svcbusname=$(az servicebus namespace list -g $rg --query '[?contains(name,`'spk1'`)].{name:name}' -o tsv)
az network private-endpoint create \
    --resource-group $rg \
    --name spk1svcbuspe \
    --vnet-name az-spk1-vnet \
    --subnet pesubnet \
    --private-connection-resource-id $(az servicebus namespace show --name $svcbusname --resource-group $rg --query id --output tsv) \
    --group-ids namespace \
    --connection-name spk1svcbuspeconn \
    --output none

# Add Service Bus as private endpoint on the Spoke2 VNET
svcbusname=$(az servicebus namespace list -g $rg --query '[?contains(name,`'spk2'`)].{name:name}' -o tsv)
az network private-endpoint create \
    --resource-group $rg \
    --name spk2svcbuspe \
    --vnet-name az-spk2-vnet \
    --subnet pesubnet \
    --private-connection-resource-id $(az servicebus namespace show --name $svcbusname --resource-group $rg --query id --output tsv) \
    --group-ids namespace \
    --connection-name spk2svcbuspeconn \
    --output none

# Create Azure Private DNS Zone for Service Bus
az network private-dns zone create \
    --resource-group $rg \
    --name "privatelink.servicebus.windows.net" \
    --output none

# Create Private DNS Zone link for Service Bus on hub VNET
az network private-dns link vnet create \
    --resource-group $rg \
    --zone-name "privatelink.servicebus.windows.net" \
    --name hubsvcbuslink \
    --virtual-network az-hub-vnet \
    --registration-enabled false \
    --output none

# Create DNS-zone group for each Service Bus private endpoint
for pe in $(az network private-endpoint list --resource-group $rg --query "[?contains(name, 'svcbus')].name" --output tsv)
do
    az network private-endpoint dns-zone-group create \
        --resource-group $rg \
        --endpoint-name $pe \
        --name privatelink_servicebus_windows_net \
        --private-dns-zone privatelink.servicebus.windows.net \
        --zone-name default \
        --output none
done

# Create a DNS Private Resolver forward rule for privatelink.servicebus.windows.net
dnsresolverip=$(az dns-resolver inbound-endpoint show -g $rg --dns-resolver-name $AzurehubName-dnsresolver --name InboundEndpoint --query ipConfigurations[].privateIpAddress -o tsv)
az dns-resolver forwarding-rule create -g $rg --name svcbus \
 --ruleset-name $AzurehubName-fwd-ruleset \
 --domain-name "privatelink.servicebus.windows.net." \
 --forwarding-rule-state "Enabled" \
 --target-dns-servers '[{"ip-address":"'$dnsresolverip'","port":"53"}]' \
 --output none

#***** Configuring On-Premises DNS *****
echo Configuring On-premises DNS Server
# Add Azure Service Bus private endpoint to on-premises DNS server
dnsresolverip=$(az dns-resolver inbound-endpoint show -g $rg --dns-resolver-name $AzurehubName-dnsresolver --name InboundEndpoint --query ipConfigurations[].privateIpAddress -o tsv)
onpremvmip=$(az network nic show --name onprem-lxvm-nic -g $rg  --query "ipConfigurations[0].privateIPAddress" -o tsv)
az vm run-command invoke --command-id RunPowerShellScript \
 --name onprem-windns \
 --resource-group $rg \
 --scripts 'param([string]$arg1)' \
 'Add-DnsServerConditionalForwarderZone -Name "servicebus.windows.net" -MasterServers $arg1 -PassThru' \
 --parameters $(echo "arg1=$dnsresolverip") \
 --output none


