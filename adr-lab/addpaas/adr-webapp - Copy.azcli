#Parameters
rg=lab-dns-resolver 
location=eastus
password=Msft123Msft123

# Create App Service Plan
az appservice plan create --name webapp-plan --resource-group $rg --location $location --sku B1 --output none --is-linux

# Create a web app
randomIdentifier1=$RANDOM 
az webapp create --resource-group $rg --plan webapp-plan --name hubweb$randomIdentifier1 --runtime 'PHP|8.2' --output none
az webapp create --resource-group $rg --plan webapp-plan --name spk1$randomIdentifier1 --runtime 'PHP|8.2' --output none
az webapp create --resource-group $rg --plan webapp-plan --name spk2$randomIdentifier1 --runtime 'PHP|8.2' --output none

# Deploy the index.php file to the web app
zip deploy.zip index.php
#az webapp deployment source config-zip --resource-group $rg --name hubweb$randomIdentifier1 --src deploy.zip
#az webapp deployment source config-zip --resource-group $rg --name spk1$randomIdentifier1 --src deploy.zip
az webapp deployment source config-zip --resource-group $rg --name spk2$randomIdentifier1 --src deploy.zip

# Add web app as private endpoint on the Hub VNET
webappname=$(az webapp list --resource-group $rg --query '[?contains(name,`'hub'`)].{name:name}' -o tsv)
az network private-endpoint create \
    --resource-group $rg \
    --name hubwebpe \
    --vnet-name az-hub-vnet \
    --subnet pesubnet \
    --private-connection-resource-id $(az webapp show --name $webappname --resource-group $rg --query id -o tsv) \
    --group-ids sites \
    --connection-name hubwebappconn \
    --output none

# Add web app as private endpoint on the Spoke1 VNET
webappname=$(az webapp list --resource-group $rg --query '[?contains(name,`'spk1'`)].{name:name}' -o tsv)
az network private-endpoint create \
    --resource-group $rg \
    --name spk1webpe \
    --vnet-name az-spk1-vnet \
    --subnet pesubnet \
    --private-connection-resource-id $(az webapp show --name $webappname --resource-group $rg --query id -o tsv) \
    --group-ids sites \
    --connection-name spk1webappconn \
    --output none

# Add web app as private endpoint on the Spoke2 VNET
webappname=$(az webapp list --resource-group $rg --query '[?contains(name,`'spk2'`)].{name:name}' -o tsv)
az network private-endpoint create \
    --resource-group $rg \
    --name spk2webpe \
    --vnet-name az-spk2-vnet \
    --subnet pesubnet \
    --private-connection-resource-id $(az webapp show --name $webappname --resource-group $rg --query id -o tsv) \
    --group-ids sites \
    --connection-name spk2webappconn \
    --output none

# Create Azure Private DNS Zone for Web App
az network private-dns zone create \
    --resource-group $rg \
    --name "privatelink.azurewebsites.net" \
    --output none

# Create Private DNS Zone link for Web App on hub VNET
az network private-dns link vnet create \
    --resource-group $rg \
    --zone-name "privatelink.azurewebsites.net" \
    --name hubwebapplink \
    --virtual-network az-hub-vnet \
    --registration-enabled false \
    --output none

# Create DNS-zone group for each Web App private endpoint
for pe in $(az network private-endpoint list --resource-group $rg --query "[?contains(name, 'web')].name" --output tsv)
do
    az network private-endpoint dns-zone-group create \
        --resource-group $rg \
        --endpoint-name $pe \
        --name privatelink_azurewebsites_net \
        --private-dns-zone privatelink.azurewebsites.net \
        --zone-name default \
        --output none
done

# Create a DNS Private Resolver forward rule for privatelink.azurewebsites.net
dnsresolverip=$(az dns-resolver inbound-endpoint show -g $rg --dns-resolver-name $AzurehubName-dnsresolver --name InboundEndpoint --query ipConfigurations[].privateIpAddress -o tsv)
az dns-resolver forwarding-rule create -g $rg --name webapp \
 --ruleset-name $AzurehubName-fwd-ruleset \
 --domain-name "privatelink.azurewebsites.net." \
 --forwarding-rule-state "Enabled" \
 --target-dns-servers '[{"ip-address":"'$dnsresolverip'","port":"53"}]' \
 --output none

#***** Configuring On-Premises DNS *****
echo Configuring On-premises DNS Server
# Add Azure Web App private endpoint to on-premises DNS server
dnsresolverip=$(az dns-resolver inbound-endpoint show -g $rg --dns-resolver-name $AzurehubName-dnsresolver --name InboundEndpoint --query ipConfigurations[].privateIpAddress -o tsv)
onpremvmip=$(az network nic show --name onprem-lxvm-nic -g $rg  --query "ipConfigurations[0].privateIPAddress" -o tsv)
az vm run-command invoke --command-id RunPowerShellScript \
 --name onprem-windns \
 --resource-group $rg \
 --scripts 'param([string]$arg1)' \
 'Add-DnsServerConditionalForwarderZone -Name "azurewebsites.net" -MasterServers $arg1 -PassThru' \
 --parameters $(echo "arg1=$dnsresolverip") \
 --output none
