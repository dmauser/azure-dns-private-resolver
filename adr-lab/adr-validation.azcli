# **** Validation *****
#Parameters
rg=lab-dns-resolver 
location=$(az group show -n $rg --query location -o tsv)
#check ssh extention and add if not present
az extension show --name ssh
if [ $? -ne 0 ]; then
    az extension add --name ssh
fi

###### BASTION SSH ######
# az-hub-lxvm
az network bastion ssh --name az-hub-bastion --resource-group $rg --target-resource-id $(az vm show -g $rg -n az-hub-lxvm --query id -o tsv) --auth-type password --username azureuser
# az-spk1-lxvm
az network bastion ssh --name az-hub-bastion --resource-group $rg --target-resource-id $(az vm show -g $rg -n az-spk1-lxvm --query id -o tsv) --auth-type password --username azureuser
# az-spk2-lxvm
az network bastion ssh --name az-hub-bastion --resource-group $rg --target-resource-id $(az vm show -g $rg -n az-spk2-lxvm --query id -o tsv) --auth-type password --username azureuser
# onprem-lxvm
az network bastion ssh --name onprem-bastion --resource-group $rg --target-resource-id $(az vm show -g $rg -n onprem-lxvm --query id -o tsv) --auth-type password --username azureuser


### Scenario 1: Private Endpoint DNS Name Resolution

# 1) List Blob Storage Account names to test Private Endpoint name resolution.
az storage account list -g $rg --query [].primaryEndpoints.blob -o tsv
# Example of the ouput for the hub storage account: https://hubstg32476.blob.core.windows.net/

# 2) Access VM Onprem-vmlx via serial console/SSH or Bastion
## 2.1) Review DNS client config. It will show the DNS server configured.
resolvectl status | grep "DNS Servers:"
## 2.2) Test storage account name resolution (change the name below based on the output on step 1):
nslookup hubstg4033.blob.core.windows.net
dig hubstg4033.blob.core.windows.net
## Repeat the same steps above on spk1stgxxxx and spoke2stgxxx storage accounts.
## Test from all VMs (on-premises and Azure Hub and spokes)
## Expectation is to get the private endpoint IP for each

# 3) Access onprem-win-dns VM via Bastion and review the Windows DNS Configuration and the Conditional Forwarder zone (use Bastion to access the Windows VM).

# 4) Review the Private DNS Resolver configuration and inbound endpoints.

# 5) Review the private endpoints hubpe, spk1pe, and spk2pe configuration.

# 6) Review the Private DNS Zones configuration related to Private Link zone: privatelink.blob.core.windows.net
## Review VNET links from Hub, Spoke1 and Spoke2.

### Scenario 2: On-premises and Azure DNS integration

# 1) Access onprem-win-dns VM via Bastion and review the Windows DNS Configuration. Check onprem.contoso.corp zone and its local DNS records.
# 2) Review the Azure DNS Resolver outbound endpoint as well as RuleSet with the specific rule to onprem.contoso.corp.
# 3) Test the name resolution from both sides by accessing onprem-lxvm via Bastion or Serial Console and issue a few nslookups against Azure VM names (az-hub-lxvm, az-spk1-lxvm, az-spk2-lxvm) using domain name azure.contoso.corp.
# For example:
# From onprem-lxvm run: 
nslookup az-hub-lxvm.azure.contoso.corp # repeat the same command for the other Azure VMs.
# From az-hub-lxvm or other Azure spoke VM run:
nslookup onprem-lxvm.onprem.contoso.corp 
nslookup onprem-windns.onprem.contoso.corp
# Name resolution should work from On-premises to Azure and vice-versa.
